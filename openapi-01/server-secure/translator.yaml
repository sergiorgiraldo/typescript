openapi: 3.0.0
servers:
  - url: 'http://localhost:3000/'
info:
  description: >-
    This is a sample translator server. For this sample, you can use the api key
    `special-key` to test the authorization filters. You can hire a translator and also get translations in your language (dummy :) ).
  version: 1.0.0
  title: OpenAPI Translator
  license:
    name: Apache-2.0
    url: 'https://www.apache.org/licenses/LICENSE-2.0.html'
tags:
  - name: translator
    description: Everything about your Translators
  - name: user
    description: Operations about user
paths:
  /translator:
    post:
      tags:
        - translator
      summary: Add a new translator
      description: ''
      operationId: addTranslator
      responses:
        '200':
          description: successful operation
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/Translator'
            application/json:
              schema:
                $ref: '#/components/schemas/Translator'
        '405':
          description: Invalid input
      security:
        - translatorstore_auth:
            - 'write:translator'
            - 'read:translator'
      requestBody:
        $ref: '#/components/requestBodies/Translator'
  /translator/findByLang:
    get:
      tags:
        - translator
      summary: Finds Translators by lang
      description: Find a translator that speaks a given language
      operationId: findTranslatorsByLang
      parameters:
        - name: lang
          in: query
          description: Lang that need to be considered for filter
          required: true
          style: form
          explode: false
          deprecated: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Translator'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Translator'
        '400':
          description: Invalid status value
      security:
        - translatorstore_auth:
            - 'read:translator'
  '/translator/{translatorId}':
    get:
      tags:
        - translator
      summary: Find translator by ID
      description: Returns a single translator
      operationId: getTranslatorById
      parameters:
        - name: translatorId
          in: path
          description: ID of translator to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/Translator'
            application/json:
              schema:
                $ref: '#/components/schemas/Translator'
        '400':
          description: Invalid ID supplied
        '404':
          description: Translator not found
      security:
        - api_key: []
    delete:
      tags:
        - translator
      summary: Deletes a translator
      description: ''
      operationId: deleteTranslator
      parameters:
        - name: api_key
          in: header
          required: false
          schema:
            type: string
        - name: translatorId
          in: path
          description: translator id to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: Translator deleted
        '400':
          description: Invalid translator value
      security:
        - petstore_auth:
            - 'write:translator'
            - 'read:translator'
externalDocs:
  description: Find out more about Swagger
  url: 'http://swagger.io'
components:
  requestBodies:
    Translator:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Translator'
        application/xml:
          schema:
            $ref: '#/components/schemas/Translator'
      description: Translstor object 
      required: true
  schemas:
    Translator:
      title: a Translator
      description: A translator for hire
      type: object
      required:
        - name
        - lang
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
          example: doggie
        lang:
          type: string
          example: doggie
      xml:
        name: translator
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
security:
  - bearerAuth: []